version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: test-asg-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: test_asg_db
      MYSQL_USER: mysql_user
      MYSQL_PASSWORD: mysql_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/init-mysql.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  test-asg-server-ts:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: test-asg-server-ts-local
    ports:
      - "3001:3000"
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - USE_LOCAL_DOCKER=true
      - DB_PROVIDER=docker
      - DB_TYPE=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=test_asg_db
      - DB_USER=mysql_user
      - DB_PASSWORD=mysql_password
      - DATABASE_URL=mysql://mysql_user:mysql_password@mysql:3306/test_asg_db
    volumes:
      - ./:/app/host-logs:ro
      - logs-volume:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:' + process.env.PORT + '/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

volumes:
  logs-volume:
  mysql_data:

networks:
  app-network:
    driver: bridge
